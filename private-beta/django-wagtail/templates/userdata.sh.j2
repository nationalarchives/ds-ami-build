#!/bin/bash

# Update yum
sudo yum update -y

# create swap file
sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo chmod 0600 /var/swap.1
sudo /sbin/mkswap /var/swap.1
sudo /sbin/swapon /var/swap.1

# Install docker
sudo yum install docker -y
sudo systemctl enable docker
sudo systemctl start docker

# Install NFS packages
sudo yum install -y amazon-efs-utils
sudo yum install -y nfs-utils
sudo service nfs start
sudo service nfs status

# Install Cloudwatch agent
sudo yum install amazon-cloudwatch-agent -y
sudo amazon-linux-extras install -y collectd
sudo aws s3 cp s3://{{ s3_deployment_bucket }}/{{ service }}/cloudwatch/cloudwatch-agent-config.json /opt/aws/amazon-cloudwatch-agent/bin/config.json
sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json

# Get the application version to be deployed
APPLICATION_DOCKER_NAME=ds-wagtail
APPLICATION_DOCKER_TAG=$(sudo aws ssm get-parameter --name "/devops/private-beta/version" --region=eu-west-2 --query 'Value')

# Set up ETNA
docker pull ghcr.io/nationalarchives/$APPLICATION_DOCKER_NAME:$APPLICATION_DOCKER_TAG
# Run image on port 8080
docker run \
    --name $APPLICATION_DOCKER_NAME \
    --publish 8080:8080 \
    --env DATABASE_NAME={{ database_name }} \
    --env DATABASE_USER={{ admin_user }} \
    --env DATABASE_PASSWORD={{ admin_pass }} \
    --env DATABASE_HOST={{ database_host }} \
    --env DJANGO_SETTINGS_MODULE={{ settings_module }} \
    --env SECRET_KEY={{ secret_key }} \
    --restart=always \
    --detach \
	ghcr.io/nationalarchives/$APPLICATION_DOCKER_NAME:$APPLICATION_DOCKER_TAG

cat << EOF > /var/finish-init.txt
[status]
finished = true
EOF
