---
name: Discovery Web Wincore AMI

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
        - dev
        - staging
        - live

jobs:
# ------------------------------------------------------------------------------
# dev deployment
# ------------------------------------------------------------------------------
  discovery-web-wincore-ami-dev:
    if: github.event.inputs.deploy-environment == 'dev'
    runs-on: ubuntu-latest
    environment: discovery-dev
    env:
      ansible_var_file: "vars_${{ github.event.inputs.deploy-environment }}.yml"
      region: "eu-west-2"
      key_name: "discovery-web-${{ github.event.inputs.deploy-environment }}-eu-west-2"
      aws_role_arn: "arn:aws:iam::846769538626:role/GithubOIDCProviderIAMRolePermissions-Role-I80RXHT6O1PL"
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: set ansible var file for dev
        run: |
          echo "ANSIBLE_VAR_FILE=${{ env.ansible_var_file }}" >> $GITHUB_ENV
          echo "SSH_KEY_FILE=${{ env.key_name }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "${{ env.region }}"
          role-to-assume: "${{ env.aws_role_arn }}"
          output-credentials: true

      - name: download key file
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://ds-dev-kpf-administration/discovery/${{ env.key_name }}
          destination: ./${{ env.key_name }}
          aws_access_key_id: ${{ steps.creds.outputs.aws-access-key-id }}
          aws_secret_access_key: ${{ steps.creds.outputs.aws-secret-access-key }}
          aws_session_token: ${{ steps.creds.outputs.aws-session-token }}
          aws_region: ${{ env.region }}

      - name: install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/discovery-req.txt'
      - run: pip install -r ${{ github.workspace }}/.github/workflows/discovery-req.txt

      - name: install ansible.windows
        run: ansible-galaxy collection install ansible.windows

      - name: run ansible playbook
        env:
          AWS_ROLE_ARN: "arn:aws:iam::846769538626:role/s-devops-ansible-amis"
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/discovery/web-wincore
          export AWS_ACCESS_KEY_ID=${{ steps.creds.outputs.aws-access-key-id }}
          export AWS_SECRET_ACCESS_KEY=${{ steps.creds.outputs.aws-secret-access-key }}
          export AWS_SESSION_TOKEN=${{ steps.creds.outputs.aws-session-token }}
          export AWS_DEFAULT_REGION="${{ env.region }}"
          ansible-playbook \
          --extra-vars "ansible_var_file=${{ env.ANSIBLE_VAR_FILE }}, keypair=${{ env.key_name }}" \
          --private-key $cur_dir/${{ env.SSH_KEY_FILE }} \
          discovery-web-wincore-playbook.yml

# ------------------------------------------------------------------------------
# staging deployment
# ------------------------------------------------------------------------------
  discovery-web-wincore-ami-staging:
    if: github.event.inputs.deploy-environment == 'staging'
    runs-on: ubuntu-latest
    environment: discovery-staging
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.branch }}"

#      - name: set ansible var file for staging
#        run: |
#          echo "ANSIBLE_VAR_FILE=vars_staging.yml" >> $GITHUB_ENV
#          echo "SSH_KEY_FILE=discovery-web-staging-eu-west-2" >> $GITHUB_ENV

      - name: aws variable settings
        run: |
          echo AWS_ROLE_ARN=${{ secrets.AWS_ROLE_ARN }} >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=eu-west-2 >> $GITHUB_ENV
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> $GITHUB_ENV
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> $GITHUB_ENV

      - name: write ssh key file
        run: |
          echo "${{ secrets.WEB_SSH_KEY }}" | tr -d '\r' > ${{ env.SSH_KEY_FILE }}
          chmod 0600 ${{ env.SSH_KEY_FILE }}

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/discovery-req.txt'

      - run: pip install -r ${{ github.workspace }}/.github/workflows/discovery-req.txt

      - name: install ansible.windows
        run: ansible-galaxy collection install ansible.windows

      - name: run ansible playbook
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/discovery/web-wincore
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=eu-west-2
          ansible-playbook --extra-vars "ansible_var_file='${{ env.ANSIBLE_VAR_FILE }}'" --private-key $cur_dir/${{ env.SSH_KEY_FILE }} discovery-web-wincore-playbook.yml

# ------------------------------------------------------------------------------
# live deployment
# ------------------------------------------------------------------------------
  discovery-web-wincore-ami-live:
    if: github.event.inputs.deploy-environment == 'live'
    runs-on: ubuntu-latest
    environment: discovery-live
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: set ansible var file for staging
        run: |
          echo "ANSIBLE_VAR_FILE=vars_live.yml" >> $GITHUB_ENV
          echo "SSH_KEY_FILE=discovery-web-live-eu-west-2" >> $GITHUB_ENV

      - name: aws variable settings
        run: |
          echo AWS_ROLE_ARN=${{ secrets.AWS_ROLE_ARN }} >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=eu-west-2 >> $GITHUB_ENV
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> $GITHUB_ENV
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> $GITHUB_ENV

      - name: write ssh key file
        run: |
          echo "${{ secrets.WEB_SSH_KEY }}" | tr -d '\r' > ${{ env.SSH_KEY_FILE }}
          chmod 0600 ${{ env.SSH_KEY_FILE }}

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/discovery-req.txt'

      - run: pip install -r ${{ github.workspace }}/.github/workflows/discovery-req.txt

      - name: install ansible.windows
        run: ansible-galaxy collection install ansible.windows

      - name: run ansible playbook
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/discovery/web-wincore
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=eu-west-2
          ansible-playbook --extra-vars "ansible_var_file='${{ env.ANSIBLE_VAR_FILE }}'" --private-key $cur_dir/${{ env.SSH_KEY_FILE }} discovery-web-wincore-playbook.yml
...
