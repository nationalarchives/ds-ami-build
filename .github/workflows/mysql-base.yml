---
name: MySQL Base AMI

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
        - dev
        - staging
        - live
      project-name:
        type: string
        description: "Project name"
        required: true


jobs:
# ------------------------------------------------------------------------------
# dev deployment
# ------------------------------------------------------------------------------
  mysql-base-ami-dev:
    if: github.event.inputs.deploy-environment == 'dev'
    runs-on: ubuntu-latest
    environment: mysql-base-dev
    env:
      ansible_var_file: "vars_dev.yml"
      key_name: "mysql-${{ env.project-name }}-${{ deploy-environment }}-${{ env.region }}"
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          ref: "${{ github.event.inputs.branch }}"

      - name: set ansible var file for dev
        run: |
          echo "ANSIBLE_VAR_FILE=$ansible_var_file" >> $GITHUB_ENV
          echo "SSH_KEY_FILE=$key_name" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::846769538626:role/GithubOIDCProviderIAMRolePermissions-Role-I80RXHT6O1PL
          output-credentials: true

      - name: write ssh key file
        run: |
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > ${{ env.SSH_KEY_FILE }}
          chmod 0600 ${{ env.SSH_KEY_FILE }}

      - name: install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/mysql-base-req.txt'
      - run: |
          pip install -r ${{ github.workspace }}/.github/workflows/mysql-base-req.txt

      - name: run ansible playbook
        env:
          AWS_ROLE_ARN: "arn:aws:iam::846769538626:role/s-devops-ansible-amis"
          VPC_ID: ${{ secrets.VPC_ID }}
          SUBNET_ID: ${{ secrets.SUBNET_ID }}
          AWS_ACCOUNT_ID: "846769538626"
        run: |
          cur_dir=$(pwd)
          cd $cur_dir/mysql-base
          export AWS_ACCESS_KEY_ID=${{ steps.creds.outputs.aws-access-key-id }}
          export AWS_SECRET_ACCESS_KEY=${{ steps.creds.outputs.aws-secret-access-key }}
          export AWS_SESSION_TOKEN=${{ steps.creds.outputs.aws-session-token }}
          export AWS_DEFAULT_REGION=eu-west-2
          ansible-playbook --extra-vars "ansible_var_file='${{ env.ANSIBLE_VAR_FILE }}'" --private-key $cur_dir/${{ env.SSH_KEY_FILE }} mysql-base-playbook.yml

...
