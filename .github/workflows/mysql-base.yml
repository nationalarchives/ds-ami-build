---
name: MySQL Base AMI

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: Environment
        required: true
        options:
        - dev
        - staging
        - live
      project-name:
        type: string
        description: Project name
        required: true


jobs:
# ------------------------------------------------------------------------------
# dev deployment
# ------------------------------------------------------------------------------
  mysql-base-ami-dev:
    if: github.event.inputs.deploy-environment == 'dev'
    uses: nationalarchives/ds-github-actions/.github/workflows/mysql-ami-build.yml@main
    with:
      account: "dev"
      ansible-var-file: "vars_dev.yml"
      region: "eu-west-2"
      key-name: "mysql-${{ github.event.inputs.project-name }}-dev-eu-west-2"
      branch: "${{ github.event.inputs.branch }}"
      base-role: "arn:aws:iam::846769538626:role/GithubOIDCProviderIAMRolePermissions-Role-I80RXHT6O1PL"
      playbook-role: "arn:aws:iam::846769538626:role/s-devops-ansible-amis"
      vpc-id: "${{ secrets.VPC_ID_DEV }}"
      subnet-id: "${{ secrets.SUBNET_ID_2A_DEV }}"
      project-name: "${{ github.event.inputs.project-name }}"

# ------------------------------------------------------------------------------
# staging deployment
# ------------------------------------------------------------------------------
  mysql-base-ami-staging:
    if: github.event.inputs.deploy-environment == 'staging'
    uses: nationalarchives/ds-github-actions/.github/workflows/mysql-ami-build.yml@main
    with:
      account: "staging"
      ansible-var-file: "vars_staging.yml"
      region: "eu-west-2"
      key-name: "mysql-${{ github.event.inputs.project-name }}-staging-eu-west-2"
      branch: "${{ github.event.inputs.branch }}"
      base-role: "arn:aws:iam::337670467269:role/GitHubActionRole"
      playbook-role: "arn:aws:iam::337670467269:role/s-devops-ansible-amis"
      vpc-id: "${{ secrets.VPC_ID_STAGING }}"
      subnet-id: "${{ secrets.SUBNET_ID_2A_STAGING }}"
      project-name: "${{ github.event.inputs.project-name }}"

...
